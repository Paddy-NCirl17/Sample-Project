<!doctype html>
<html lang="en" ng-app>

<head>
  <title>Football Teams</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/bootstrap-responsive.min.css">
 <style>
    
    h1 {
     color: white;
     text-align: center;
    }
    #info {
     color: black;
     text-align: center;
    }
    body {
      padding-top: 0px;
      padding-bottom: 60px;
      background: lightblue url("https://www.mulierchile.com/football-field-wallpaper/football-field-wallpaper-014.jpg") no-repeat fixed center;
    }
    
   table{ background-color: #f6f6f6}
   th{color:blue;
      border-collapse: collapse;
      border: 1px solid black;}
    td {
      border-collapse: collapse;
      border: 1px solid black;
      text-align: center;
      font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
      }
     tr:hover {background-color: #ddd;}
    
   input { width: 75%; padding: .5em 1em; }
   
   .field{text-align:center;}
    #map {
        height: 200px;
        width: 100%;
        padding-top: 60px;
        padding-bottom: 60px;
        background-color: grey;
    }
   
    /* search feature styling*/
      #myInput {
        background-position: 10px 10px;
        background-repeat: no-repeat;
        width: 20%;
        font-size: 16px;
        padding: 5px 20px 5px 40px;
        border: 1px solid #ddd;
        margin-bottom: 12px;
        margin-left: 30px;
        margin-top: 12px;
        }
    
    /* Animated submit button styling */
          #Btn1{
          padding: 10px 20px;
          font-size: 16px;
          text-align: center;
          cursor: pointer;
          outline: none;
          color: #fff;
          background-color: #4CAF50;
          border: none;
          border-radius: 15px;
          box-shadow: 0 3px #999;
        }
          #validate{
          padding: 10px 20px;
          font-size: 16px;
          text-align: center;
          cursor: pointer;
          outline: none;
          color: #fff;
          background-color: #4CAF50;
          border: none;
          margin-left: 55px;  
          border-radius: 15px;
          box-shadow: 0 3px #999
        }
          #delete{
          padding: 10px 20px;
          font-size: 16px;
          text-align: center;
          cursor: pointer;
          outline: none;
          color: #fff;
          background-color: #4CAF50;
          border: none;
          margin-left: 10px;
          border-radius: 15px;
          box-shadow: 0 3px #999;
        }
        #Btn1:hover {
          background-color: #3e8e41
        }
        #delete:hover {
          background-color: #3e8e41
        }
        #validate:hover {
          background-color: #3e8e41
        }
   
   
        .selected {
          background-color:brown;
          color: #FFF;
        }
   
         #Btn1:active {
                background-color: #3e8e41;
                box-shadow: 0 3px #666;
                transform: translateY(4px);
              }
        #delete:active {
            background-color: #3e8e41;
            box-shadow: 0 3px #666;
            transform: translateY(4px);
          }
        #validate:active {
            background-color: #3e8e41;
            box-shadow: 0 3px #666;
            transform: translateY(4px);
          }
  </style>
  <script src="/js/jquery.min.js"></script>
  <script src="/js/bootstrap.min.js"></script>
  
  <script>
   function draw_table() {
          $("#results").empty();
           $.getJSONUncached = function(url) {
            return $.ajax({
             url: url,
              type: 'GET',
               cache: false,
                success: function(html) {
               $("#results").append(html);
              select_row();
             }
           });
         };
        $.getJSONUncached("/get/html")
      }
    
    function select_row() {
      $("#myTable tbody tr").click(function() {
        $(".selected").removeClass("selected");
        $(this).addClass("selected");
        var $row = $(this).attr("id");
        delete_row($row);
      })
    };
     $(document).ready(function(){
       $("#validate").click(function() {
        console.log(true)
        $.ajax({
          url:"/Test",
          type: "GET"
        })
        .done(function(response){
          alert("The xml is " +response)
        })
      })
       
     })
      
   
      function delete_row(row_val) {
        $("#delete").click(function() {
          $.ajax({
            url: "/post/delete",
            type: "POST",
            data: {
              row: row_val
            },
            cache: false,
            success: function(){
              setTimeout(draw_table,2000)               
            }
          })
          window.location="/";
        })
      }
    
    $(document).ready(function() {
      draw_table();
    });
  </script>
  
<!-- Sort Table by Clicking the Headers -->
<script>
  function sortTable(n) {
   var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    table = document.getElementById("myTable");
     switching = true;
      //Set the sorting direction to ascending:
       dir = "asc";
        /*Make a loop that will continue until
         no switching has been done:*/
          while (switching) {
           //start by saying: no switching is done:
           switching = false;
            rows = table.getElementsByTagName("TR");
            /*Loop through all table rows (except the
             first, which contains table headers):*/
              for (i = 1; i < (rows.length - 1); i++) {
               //start by saying there should be no switching:
                shouldSwitch = false;
                 /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[n];
               y = rows[i + 1].getElementsByTagName("TD")[n];
              /*check if the two rows should switch place,
             based on the direction, asc or desc:*/
            if (dir == "asc") {
           if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
         shouldSwitch = true;
        break;
       }
        } else if (dir == "desc") {
          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
            //if so, mark as a switch and break the loop:
            shouldSwitch = true;
           break;
          }
        }
      }
      if (shouldSwitch) {
       /*If a switch has been marked, make the switch
        and mark that a switch has been done:*/
         rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;
           //Each time a switch is done, increase this count by 1:
            switchcount++;
             } else {
              /*If no switching has been done AND the direction is "asc",
             set the direction to "desc" and run the while loop again.*/
            if (switchcount == 0 && dir == "asc") {
           dir = "desc";
          switching = true;
        }
      }
    }
  }
</script>

<script>
  function myFunction() {
   // Declare variables 
    var input, filter, table, tr, td, i;
     input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
       table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
         // Loop through all table rows, and hide those who don't match the search query
          for (i = 0; i < tr.length; i++) {
           td = tr[i].getElementsByTagName("td")[1];
            if (td) {
            if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
             tr[i].style.display = "";
            } else {
          tr[i].style.display = "none";
        }
      }
    }
  }
</script>
</head>

<body> 
    <div class="container">
         <div class="page-header">
          <h1>Football Teams</h1>
           </div>
            <div id="map">
             </div>
              <div class="row">
                <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for a Team ..">
                  <button id ="delete">Delete</button>
                 <div id="results" class="span8">
                </div>
               <div class="span3">
              <ul class="nav nav-list well">
             <li>
            <form enctype='application/json' action="/post/json" method="post">
           <div class="field">
          <input type="text" name="Name" placeholder="User">
         </div>
        <div class="field">
       <input type="text" name="Team" required placeholder="Team, Country">
      </div>
     <div class="field">
      <input type="text" name="Captain" placeholder="Captain">
       </div>
        <div class="field">
         <input type="text" name="Stadium" placeholder="Stadium">
          </div>
           <div class="field">
             <button id = "Btn1" type="submit">Submit</button>         
              </div>
             </form>
              <button id="validate">Validate Xml</button> 
          </li>
        </ul>
      </div>
    </div>
  </div>
</body>
      <script>//Google API
      function initMap() {
       var data = <%- JSON.stringify(myTeams.team) %>;//Take info from Json file to set location.
        console.log(data.length);
        if (data.length ==0){
          var result = {lat: 52.6369, lng:-1.1398};
        }
        else{
            var result = {lat: Number(data[0].coordinates[0].location.lat), lng: Number(data[0].coordinates[0].location.lng)};
             }
          //console.log(data[0].coordinates[0].location.lat);         
          var map = new google.maps.Map(document.getElementById('map'), {
         zoom: 6,
        center: result    
       });
        var markers = [];
         var contentString; 
          //Takes coordinates from geocode and loops through each location.
           for(i = 0; i < data.length; i++){
             console.log(data[i]);
            var  marker = new google.maps.Marker({
              
            position: {lat: Number(data[i].coordinates[0].location.lat), lng: Number(data[i].coordinates[0].location.lng)},
           animation: google.maps.Animation.DROP,
          map: map,
         });
          console.log(i);
         markers.push(marker);
          //Stackoverflow referenced
         var infowindow = new google.maps.InfoWindow({
          content: contentString = '<div><h1 id="info">'+data[i].Team+'</h1>'+
           '<p><b>'+"Captain: "+ data[i].Captain +'</p></b>'+
            '<p><b>'+"Name: "+ data[i].Name +'</p></b>'+    //contents of Info Window
             '<p><b>'+"Stadium: "+ data[i].Stadium+'</p></b></div>'
             });
            marker.infowindow = infowindow;
           marker.addListener('mouseover', function() {
          return this.infowindow.open(map,this);        //open info Window    
        });
          marker.addListener('mouseout', function() {
          infowindow.close();        //close info Window      
        });
             
         //console.log(contentString);
        } 
      }
    </script>
      <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCOtY3B9nrFWLW699A8i6V5IJQ_TKwmgZo&callback=initMap">
    </script>

</html>